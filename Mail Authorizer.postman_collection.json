{
	"info": {
		"_postman_id": "7920d35a-c295-4a6d-b5f2-b4c3b0d3d6f9",
		"name": "Mail Authorizer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4346128"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Send Code",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"johndoe@example.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"if (response.token) {\r",
									"    const { token } = response;\r",
									"    pm.collectionVariables.set('token', token);\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"johndoe@example.com\",\r\n    \"otp\": \"757943\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Upload",
			"item": [
				{
					"name": "Get Presigned URL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"if (response.url) {\r",
									"    const { url } = response;\r",
									"    pm.collectionVariables.set('url', url);\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"{{$randomLoremWords}}\",\r\n    \"filename\": \"sample.mp4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/files",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"files"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload File",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "file",
							"file": {
								"src": "/D:/Git/auth-stream/scripts/sample.mp4"
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Use CLI to Trigger Post-Processing",
					"request": {
						"method": "SHELL",
						"header": [],
						"url": {
							"raw": "sls invoke local --function postProcessing   --env IS_OFFLINE=true   --data '{\"Records\":[{\"s3\":{\"object\":{\"key\":\"files/<file name here>\"}}}]}'",
							"host": [
								"sls invoke local --function postProcessing   --env IS_OFFLINE=true   --data '{\"Records\":[{\"s3\":{\"object\":{\"key\""
							],
							"port": "\"files",
							"path": [
								"<file name here>\"}}}]}'"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Files",
			"item": [
				{
					"name": "Get Files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"if (response.cursorId) {\r",
									"    const { cursorId } = response;\r",
									"    if (cursorId) {\r",
									"        pm.collectionVariables.set('cursorId', cursorId);\r",
									"    }\r",
									"}\r",
									"\r",
									"if (response.data && response.data.length > 0) {\r",
									"    const [{ id }] = response.data;\r",
									"    pm.collectionVariables.set('fileId', id);\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/files",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"files"
							],
							"query": [
								{
									"key": "cursorId",
									"value": "{{cursorId}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get File",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/files/{{fileId}}/signed-url",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"files",
								"{{fileId}}",
								"signed-url"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000/dev",
			"type": "string"
		},
		{
			"key": "resourceId",
			"value": "",
			"type": "string"
		},
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRpZWdvdmljdG9yZ29uemFnYSsxQGdtYWlsLmNvbSIsImlhdCI6MTczOTAyNDQ2MiwiZXhwIjoxNzM5MDI4MDYyfQ.silCcjHzMrwTinzpiTQ1o3tpvArKbTKAqFgUt8EG0Bc"
		},
		{
			"key": "url",
			"value": "http://localhost:4566/mailauthorizer-content/files/2345efb6-12d5-4d8e-8699-0497225f9300.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIATWVL4JLDXQCH46PS%2F20250208%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20250208T142111Z&X-Amz-Expires=900&X-Amz-Signature=b05c2e29bf71e94b7d2f9c5e0f769e62584f4247e0518513acf8571ab1888ea2&X-Amz-SignedHeaders=host&x-amz-meta-filename=sample.mp4&x-amz-meta-title=eveniet%20pariatur%20aut&x-id=PutObject"
		},
		{
			"key": "fileId",
			"value": "0b6b0221-45c5-4ba9-ad2b-300b64c72d17"
		}
	]
}