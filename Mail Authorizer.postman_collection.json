{
	"info": {
		"_postman_id": "e2aa7fc0-ac77-45cc-bea7-ebedfdb3dd12",
		"name": "Mail Authorizer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4346128"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Send Code",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"diegovictorgonzaga@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"if (response.token) {\r",
									"    const { token } = response;\r",
									"    pm.collectionVariables.set('token', token);\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"diegovictorgonzaga@gmail.com\",\r\n    \"otp\": \"111065\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Upload",
			"item": [
				{
					"name": "Get Presigned URL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"if (response.url) {\r",
									"    const { url } = response;\r",
									"    pm.collectionVariables.set('url', url);\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"{{$randomLoremWords}}\",\r\n    \"filename\": \"sample.mp4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/files",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"files"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload File",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "file",
							"file": {
								"src": "/D:/Git/auth-stream/scripts/sample.mp4"
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Use CLI to Trigger Post-Processing",
					"request": {
						"method": "SHELL",
						"header": [],
						"url": {
							"raw": "sls invoke local --function postProcessing   --env IS_OFFLINE=true   --data '{\"Records\":[{\"s3\":{\"object\":{\"key\":\"files/<file name here>\"}}}]}'",
							"host": [
								"sls invoke local --function postProcessing   --env IS_OFFLINE=true   --data '{\"Records\":[{\"s3\":{\"object\":{\"key\""
							],
							"port": "\"files",
							"path": [
								"<file name here>\"}}}]}'"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Public",
			"item": [
				{
					"name": "Get Files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"const { cursorId, data } = response;\r",
									"if (cursorId) {\r",
									"    pm.collectionVariables.set('cursorId', cursorId);\r",
									"}\r",
									"\r",
									"if (data.length > 0) {\r",
									"    const [{ id }] = data;\r",
									"    pm.collectionVariables.set('fileId', id)\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/files",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"files"
							],
							"query": [
								{
									"key": "cursorId",
									"value": "{{cursorId}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get File",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/files/{{fileId}}/signed-url",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"files",
								"{{fileId}}",
								"signed-url"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "",
			"type": "string"
		},
		{
			"key": "resourceId",
			"value": "",
			"type": "string"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "url",
			"value": ""
		},
		{
			"key": "fileId",
			"value": ""
		}
	]
}